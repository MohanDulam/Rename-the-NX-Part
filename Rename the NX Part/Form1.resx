<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /gN0NMOms6YnEAAAAABJRU5ErkJggg==
</value>
  </data>
</root>